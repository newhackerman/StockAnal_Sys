version: '3.8'

services:
  # 基本面分析系统主服务
  fundamental-analyzer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fundamental-analyzer
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - TZ=Asia/Shanghai
      # AI服务配置
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_API_URL=${OPENAI_API_URL:-https://api.openai.com/v1}
      - OPENAI_API_MODEL=${OPENAI_API_MODEL:-gpt-4o}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - API_PROVIDER=${API_PROVIDER:-openai}
      # 数据库配置
      - USE_DATABASE=${USE_DATABASE:-true}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./data/stock_analysis.db}
      # Redis配置
      - REDIS_URL=redis://redis:6379/0
      # 应用配置
      - PORT=5000
      - DEBUG=false
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./cache:/app/cache
      - ./.env:/app/.env:ro
    restart: unless-stopped
    networks:
      - analyzer-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: fundamental-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - analyzer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: fundamental-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fundamental-analyzer
    restart: unless-stopped
    networks:
      - analyzer-network

volumes:
  redis_data:

networks:
  analyzer-network:
    driver: bridge